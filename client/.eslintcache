[{"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/index.tsx":"1","/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/App.tsx":"2","/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Search.tsx":"3","/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Home.tsx":"4","/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Individual.tsx":"5"},{"size":272,"mtime":1607987393708,"results":"6","hashOfConfig":"7"},{"size":558,"mtime":1608055484100,"results":"8","hashOfConfig":"7"},{"size":2112,"mtime":1608056627806,"results":"9","hashOfConfig":"7"},{"size":935,"mtime":1608054369575,"results":"10","hashOfConfig":"7"},{"size":5012,"mtime":1608056557535,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yy86pm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/index.tsx",[],["24","25"],"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/App.tsx",[],"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Search.tsx",[],"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Home.tsx",[],"/Users/vicki/go/src/github.com/vickiniu/project-red-string/web/src/components/Individual.tsx",["26"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface IndividualParam {\n    individualID: string;\n}\n\ninterface Association {\n    id: string;\n    description: string;\n}\n\ninterface IndividualResult {\n    id: string;\n    firstName: string;\n    lastName: string;\n    role: string;\n    title: string;\n    twitter: string;\n    associations: Association[];\n}\n\ninterface Contribution {\n    id: string;\n    amount: number;\n    date: Date;\n    contributorName: string;\n    contributorId: string;\n    recipientName: string;\n    recipientId: string;\n}\n\nconst Individual = () => {\n    const { individualID } = useParams<IndividualParam>();\n    const [individual, setIndividual] = useState<IndividualResult>();\n    const [contribReceived, setContribReceived] = useState<Contribution[]>();\n    const [contribGiven, setContribGiven] = useState<Contribution[]>();\n\n    useEffect(() => {\n        // Get individual\n        fetch(\"http://localhost:8080/get-individual\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: individualID,\n            }),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                setIndividual({\n                    id: data.id,\n                    firstName: data.first_name,\n                    lastName: data.last_name,\n                    role: data.role,\n                    title: data.title,\n                    twitter: data.twitter,\n                    associations: data.associations?.map((a: any) => {\n                        return {\n                            id: a.id,\n                            description: a.description,\n                        };\n                    }),\n                });\n            })\n            .catch((err) => {\n                console.log(\"error: \", err);\n            });\n\n        // Get contributions received\n        fetch(\"http://localhost:8080/individual-contributions-received\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: individualID,\n            }),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                setContribReceived(\n                    data?.map((d: any) => {\n                        return {\n                            id: d.id,\n                            amount: d.amount,\n                            date: d.date,\n                            contributorName: d.contributor_name,\n                            contributorId: d.contributor_id,\n                            recipientName: d.recipient_name,\n                            recipientId: d.recipient_id,\n                        };\n                    })\n                );\n            })\n            .catch((err) => {\n                console.log(\"error: \", err);\n            });\n\n        // Get contributions given\n        fetch(\"http://localhost:8080/individual-contributions-given\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: individualID,\n            }),\n        })\n            .then((resp) => resp.json())\n            .then((data) => {\n                setContribGiven(\n                    data?.map((d: any) => {\n                        return {\n                            id: d.id,\n                            amount: d.amount,\n                            date: d.date,\n                            contributorName: d.contributor_name,\n                            contributorId: d.contributor_id,\n                            recipientName: d.recipient_name,\n                            recipientId: d.recipient_id,\n                        };\n                    })\n                );\n            })\n            .catch((err) => {\n                console.log(\"error: \", err);\n            });\n    }, []);\n\n    return individual ? (\n        <>\n            <h3>{individual.firstName + \" \" + individual.lastName}</h3>\n            <p>{individual.role}</p>\n            {individual.associations?.map((a: Association) => {\n                return <p key={a.id}>{a.description}</p>;\n            })}\n            {contribGiven && (\n                <>\n                    <h3>Contributions Given</h3>\n                    {contribGiven?.map((c: Contribution) => {\n                        return (\n                            <p key={c.id}>\n                                {c.contributorName + \", \" + c.amount}\n                            </p>\n                        );\n                    })}\n                </>\n            )}\n            {contribReceived && (\n                <>\n                    <h3>Contributions Received</h3>\n                    {contribReceived?.map((c: Contribution) => {\n                        return (\n                            <p key={c.id}>\n                                {c.contributorName + \", \" + c.amount}\n                            </p>\n                        );\n                    })}\n                </>\n            )}\n        </>\n    ) : (\n        <></>\n    );\n};\n\nexport default Individual;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":121,"column":8,"nodeType":"33","endLine":121,"endColumn":10,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'individualID'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [individualID]",{"range":"40","text":"41"},[3787,3789],"[individualID]"]